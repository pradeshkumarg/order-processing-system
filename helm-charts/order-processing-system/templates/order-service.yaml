{{- if .Values.services.orderService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: order-service
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "dependencies.helm.sh/requires": "infrastructure-ready"
spec:
  replicas: {{ .Values.services.orderService.replicas }}
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-kafka
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z kafka 29092; do echo waiting for kafka; sleep 2; done;']
        - name: wait-for-postgres
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: order-service
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.services.orderService.image.repository }}:{{ .Values.services.orderService.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: "{{ .Values.services.orderService.env.SPRING_DATASOURCE_URL }}"
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.services.orderService.env.SPRING_DATASOURCE_USERNAME }}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ .Values.services.orderService.env.SPRING_DATASOURCE_PASSWORD }}"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Values.services.orderService.env.SPRING_KAFKA_BOOTSTRAP_SERVERS }}"
            - name: JAVA_TOOL_OPTIONS
              value: "{{ .Values.services.orderService.env.JAVA_TOOL_OPTIONS }}"
            - name: SPRING_MAIN_LAZY_INITIALIZATION
              value: "{{ .Values.services.orderService.env.SPRING_MAIN_LAZY_INITIALIZATION }}"
            - name: SPRING_MAIN_BANNER_MODE
              value: "{{ .Values.services.orderService.env.SPRING_MAIN_BANNER_MODE }}"
          resources:
            {{- toYaml .Values.services.orderService.resources | nindent 12 }}
          startupProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: order-service
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    app: order-service
  ports:
    - port: {{ .Values.services.orderService.service.port }}
      targetPort: 8081
  type: {{ .Values.services.orderService.service.type }}
{{- end }}
