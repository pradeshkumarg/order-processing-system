{{- if .Values.infrastructure.kafka.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "dependencies.helm.sh/requires": "zookeeper-ready"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-zookeeper
          image: busybox:1.28
          command: ['sh', '-c', '{{ template "order-processing-system.zookeeper.readinessCheck" . }}']
      containers:
        - name: kafka
          image: "{{ .Values.infrastructure.kafka.image.repository }}:{{ .Values.infrastructure.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_BROKER_ID }}"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_ZOOKEEPER_CONNECT }}"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_LISTENER_SECURITY_PROTOCOL_MAP }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_ADVERTISED_LISTENERS }}"
            - name: KAFKA_LISTENERS
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_LISTENERS }}"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_INTER_BROKER_LISTENER_NAME }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }}"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_TRANSACTION_STATE_LOG_MIN_ISR }}"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR }}"
            - name: KAFKA_PORT
              value: "{{ .Values.infrastructure.kafka.env.KAFKA_PORT }}"
          resources:
            {{- toYaml .Values.infrastructure.kafka.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    app: kafka
  ports:
    {{- range .Values.infrastructure.kafka.service.ports }}
    - name: {{ .name }}
      port: {{ .port }}
      targetPort: {{ .targetPort }}
    {{- end }}
  type: {{ .Values.infrastructure.kafka.service.type }}
{{- end }}
