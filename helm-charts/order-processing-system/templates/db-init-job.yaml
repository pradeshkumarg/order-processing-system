{{- if .Values.infrastructure.postgres.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: db-init-job
  namespace: {{ .Values.global.namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 5
  ttlSecondsAfterFinished: 10
  template:
    metadata:
      name: db-init-job
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done; echo postgres is ready']
      containers:
        - name: db-init
          image: postgres:13-alpine
          command:
            - /bin/sh
            - -c
            - |
              echo "Checking database connection..."
              PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT 1;"
              echo "Database connection successful. Services will handle their own schema initialization."
          envFrom:
            - configMapRef:
                name: postgres-config
{{- end }}
